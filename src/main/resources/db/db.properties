#该配置文件的所有内容都可在官方github上找到
#https://github.com/alibaba/druid/wiki

jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/ssmdb?useUnicode=true&characterEncoding=utf8&useSSL=false
jdbc.username=lixinjie
#密码加密
jdbc.password=hiibM7FnVGoOxSsyv4fktEZ/yPj6GCGV7O3ibxIVaYjRjPwH6ygkM8tqbuLEA01SvrfFuhHWnmUFBYa9FFMUqg==
#解密公钥
publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANh42VgRy+pylveswE+1vn4Ilnyjj+lH6bfFCNWs86YagjnXO5uVJiPt+S+sxm1uC5LzUgtMUXteyPW2+To/qgsCAwEAAQ==
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
initialSize=1
#最大连接池数量
maxActive=8
#最小连接池数量
minIdle=1
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
maxWait=20000
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
validationQuery=select 1
#单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
validationQueryTimeout=3
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
testOnReturn=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
testWhileIdle=true
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
poolPreparedStatements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
maxPoolPreparedStatementPerConnectionSize=-1
#连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
keepAlive=false
#有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
timeBetweenEvictionRunsMillis=60000
#连接保持空闲而不被驱逐的最小时间
minEvictableIdleTimeMillis=1800000
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
#filter:config，从配置文件中读取配置，从远程http文件中读取配置，为数据库密码提供加密功能
#filter可以配置多个，用逗号分隔
filters=config
#需要解密
connectionProperties=config.decrypt=true;config.decrypt.key=${publicKey}